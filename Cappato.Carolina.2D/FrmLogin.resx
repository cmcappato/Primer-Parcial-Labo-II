<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgLogin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AUMAy07UFDObgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAANYSURBVHhe
        7dtZqE1xFMfxaw5lSEp4M5YoGZIoD4ZESfGqjCljiRdFIoU8GSJFpgdS8qDwYHyQKcIDZUgRZUiGQqbv
        qvuv0+l3z9n/ff9nn0XnV5/Suff/X+sst32GvXdTgemPRTiC23iHH83eNj92GAvRD/9NpuECfuFPRj9x
        DlPxz2Y4rkE9wRiXMQz/TNpgFb5DPaE8vmEF3Kcd9kM9iRQOoT1cxv7n7QCnGk/JhmC13GUzVMO1sAGu
        MhkxR/nWslqT4CKd8QSq0XK/cRbzMRRdm9m/F8B+Zr+j1pZ7jE6oe9ZANVjuFsagWsbiDtQe5ezVpq7p
        gFdQzZU6AftLyRr73ZNQe5V6CeuhbpkF1Vipq+iI2NgTuwi1Z6kZqFuOQjUVfEYf5E1ffIHaO7CXxbrF
        /gRVU8EWtDZbofYOXqAu6Q3VUKnBaG0GQe1dqhcKz3ioZoKnSJXnUDWCcSg8dvBRzQR2AEsV+0SoagTT
        UXjmQDUTnEKq2F6qRmC9FJ65UM0E9jqeKtXeE1gvhacxAKhmgsYAkCqNAUDVCBoDQOFpDACqmeC/H8AS
        qGaC67DGUrC9VI3Aeikss/EAqpF6ug/7fqKm2QlV3JPtqElWQhX0aDmSpic+QRXzyHrtgWSx09qqkGf2
        NXuy7IMq4tleJIt9ra2KeGY9J0u1NyJ52NkkOxNksp5ZipHyjVjSAZyGXTxRnhE4A7UmD5cDWItqWQe1
        Npa7AexC1tgBTO0Rw9UA3qM7ssZewz9A7ZWVqwEcQGwOQu2VlasBLEVslkHtlZWrAcxDbGyN2isrVwPY
        iNhsgtorK1cDuITYXIHaKytXAzCjkTV2KY3aI4a7ATyCfayulm54CLVHDHcDMDcwAC1lIG5CrY3lcgDm
        I9qiPPaY/UytycPtACpdOPEMak0ebgdg9wG0lPNQa/JwO4DdaCl7oNbk4XYAla7uXA21Jg+3A6h0YeNM
        qDV5uB1ApUvnhkCtycPtACpdM9wFak0ebgewGHZrTXnssWonXGO4HUBRkg7gOFQRz44hWXZAFfFsG5LF
        7v5URTybgmSxDyp3oQp5dA/qA1erMgpfoQp6Yj2ORE0yEW+gCnvwGhNQ09gJjvWw293tlhjVSJGsB7sj
        zXqyb5Mi0tT0F5Prjk3yTTpyAAAAAElFTkSuQmCC
</value>
  </data>
</root>